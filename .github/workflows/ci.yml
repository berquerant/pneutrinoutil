name: CI

permissions:
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  MYSQL_HOST: "127.0.0.1"
  MYSQL_PORT: "13306"
  MYSQL_DATABASE: "pneutrinoutil"
  MYSQL_ROOT_PASSWORD: "rootpass"
  MYSQL_USER: "pneutrinoutil"
  MYSQL_PASSWORD: "userpass"
  # MYSQL_DSN: "${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(${MYSQL_HOST}:${MYSQL_PORT})/${MYSQL_DATABASE}?parseTime=true"
  REDIS_VERSION: "7.4.3"
  REDIS_HOST: "127.0.0.1"
  REDIS_PORT: "16379"
  REDIS_TEST_DB: "10"
  # REDIS_DSN: "redis://${REDIS_HOST}:${REDIS_PORT}"
  MINIO_VERSION: "RELEASE.2025-04-22T22-12-26Z"
  MINIO_HOST: "127.0.0.1"
  MINIO_PORT: "19000"
  MINIO_CONSOLE_PORT: "19001"
  MINIO_ROOT_USER: "minio"
  MINIO_ROOT_PASSWORD: "miniopassword"
  MINIO_SITE_REGION: "us-east-1"
  # AWS_ACCESS_KEY_ID: "${MINIO_ROOT_USER}"
  # AWS_SECRET_ACCESS_KEY: "${MINIO_ROOT_PASSWORD}"
  # AWS_DEFAULT_REGION: "${MINIO_SITE_REGION}"
  # AWS_ENDPOINT_URL: "http://${MINIO_HOST}:${MINIO_PORT}"
  AWS_USE_PATH_STYLE_ENDPOINT: "true"
  AWS_S3_DISABLE_HTTPS: "true"
  STORAGE_BUCKET: "pneutrinoutil"
  GO_ARCH_LINT_VERSION: "v1.12.0"

jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set env vars
        run: |
          echo "MYSQL_DSN=${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(${MYSQL_HOST}:${MYSQL_PORT})/${MYSQL_DATABASE}?parseTime=true" >> $GITHUB_ENV
          echo "REDIS_DSN=redis://${REDIS_HOST}:${REDIS_PORT}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=${MINIO_SITE_REGION}" >> $GITHUB_ENV
          echo "AWS_ENDPOINT_URL=http://${MINIO_HOST}:${MINIO_PORT}" >> $GITHUB_ENV
      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          daemon-config: |
            {
              "registry-mirrors": [
                "https://mirror.gcr.io"
              ]
            }
      - name: Setup Go
        uses: actions/setup-go@v5.5.0
        id: setup-go
        with:
          go-version: "1.24"
          check-latest: true
          cache-dependency-path: go.sum
      - name: Download go modules
        if: ${{ steps.setup-go.outputs.cache-hit != 'true' }}
        run: go mod download
      - name: Test
        run: ./task test
      - name: E2E test
        run: ./task e2e
      - name: Stop docker services
        if: ${{ always() }}
        run: docker compose down
      - name: Build
        run: ./task build

  go-lint:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Setup Go
        uses: actions/setup-go@v5.5.0
        id: setup-go
        with:
          go-version: "1.24"
          check-latest: true
          cache-dependency-path: go.sum
      - name: Download go modules
        if: ${{ steps.setup-go.outputs.cache-hit != 'true' }}
        run: go mod download
      - name: Lint
        run: ./task lint

  shell-lint:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Enable Shellcheck problem matcher
        run: echo "::add-matcher::.github/shellcheck-matcher.json"
      - name: Shellcheck
        run: |
          .github/bin/shellcheck.sh
          echo "::remove-matcher owner=shellcheck-matcher::"
